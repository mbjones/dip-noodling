#!/bin/bash

init() {
    mkdir -p ".dip"
}

check_dip() {
    # Check if we are in an existing DIP-enabled directory. 
    # If not, exit.
    # Later, this should traverse upwards looking for parents
    [[ ! -d .dip ]] && echo "Not in a DIP directory. Run from the root of a dip directory, or run 'dip init'." && exit
}

store() {
    file=$1
    [[ -z "$file" ]] && echo "File must be provided." && exit
    pid=$2
    format=$3
    sha=$(shasum -a 256 ${file} | awk '{print $1}')
    OBJDIR=".dip/objects/${sha:0:2}/${sha:2:2}"
    mkdir -p ${OBJDIR}
    cp ${file} ${OBJDIR}/${sha:4}
    if [ ! -z "${pid}" ]; # Only tag an object if a PID is provided
    then
        tag ${sha} ${pid}
        if [ ! -z "${format}" ]; # Only create sysmeta if a format is provided
        then
            sysmeta ${file} ${pid} ${format}
        fi
    fi
    echo ${sha}
}

tag() {
    cid=$1
    value=$2
    taghash=$(echo -n ${value} |shasum -a 256 |awk '{print $1}')
    tagdir=".dip/refs/tags/${taghash:0:2}/${taghash:2:2}"
    mkdir -p ${tagdir}
    tagfile="${tagdir}/${taghash:4}"
    echo -n ${cid} > ${tagfile}
    echo " ${value}" >> ${tagfile}
    cat ${tagfile}
}

listtags() {
    tagdir=".dip/refs/tags"
    cat ${tagdir}/*/*/*
}

sysmeta() {
    file=${1}
    pid=$2
    format=$3
    template='../sysmeta-template'
    cid=$(shasum -a 256 ${file} | awk '{print $1}')
    pidhash=$(echo -n ${pid} |shasum -a 256 |awk '{print $1}')
    piddir=".dip/sysmeta/${pidhash:0:2}/${pidhash:2:2}"
    mkdir -p ${piddir}
    pidfile="${piddir}/${pidhash:4}"
    isodate=$(date +"%Y-%m-%dT%H:%M:%S%z")
    size=$(stat -f "%z" ${file})
    cat ${template} | PID=${pid} \
        SHA256=${cid} \
        ISODATE=${isodate} \
        SIZE=${size} \
        FILENAME=$(basename ${file}) \
        FORMAT_ID=${format} \
        envsubst > ${pidfile}
}

cat-object() {
    cid=$1
    objdir=".dip/objects"
    cat ${objdir}/${cid:0:2}/${cid:2:2}/${cid:4}
}

cat-sysmeta() {
    pid=$1
    pidhash=$(echo -n ${pid} |shasum -a 256 |awk '{print $1}')
    piddir=".dip/sysmeta/${pidhash:0:2}/${pidhash:2:2}"
    cat ${piddir}/${pidhash:4}
}

POSITIONAL_ARGS=()
check_dip

while [[ $# -gt 0 ]]; do
case $1 in
    -s|--store)
    FILE="$2"
    PID=$3
    FORMAT=$4
    shift # past argument
    shift # past value
    shift
    shift
    store ${FILE} ${PID} ${FORMAT}
    exit
    ;;
    -c|--cat)
    CID="$2"
    shift # past argument
    shift # past value
    cat-object ${CID}
    exit
    ;;
    -m|--meta)
    PID="$2"
    shift # past argument
    shift # past value
    cat-sysmeta ${PID}
    exit
    ;;
    -t|--tag)
    CID=$2
    TAG="$3"
    shift # past argument
    shift # past value
    tag ${CID} ${TAG}
    ;;
    -l|--list-tags)
    shift # past argument
    listtags
    ;;
    -i|--init)
    shift # past argument
    init
    ;;
    -h|--help)
    shift # past argument
    echo "$0 [-s|--store file [pid [format]]] [-t|--tag cid tag] [-l|--list-tags] [-c|--cat cid] [-m|--meta pid] [-i|--init]"
    exit
    ;;
    -*|--*)
    echo "Unknown option $1"
    exit 1
    ;;
    *)
    POSITIONAL_ARGS+=("$1") # save positional arg
    shift # past argument
    ;;
esac
done

set -- "${POSITIONAL_ARGS[@]}" # restore positional parameters
